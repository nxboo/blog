<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bin blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.boshu.org/"/>
  <updated>2017-07-07T07:58:49.000Z</updated>
  <id>http://blog.boshu.org/</id>
  
  <author>
    <name>Bin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Steem dbadmin安装</title>
    <link href="http://blog.boshu.org/2017/07/dbadmin/"/>
    <id>http://blog.boshu.org/2017/07/dbadmin/</id>
    <published>2017-07-07T07:23:39.000Z</published>
    <updated>2017-07-07T07:58:49.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>dbadmin是steem网站的管理平台，使用Ruby on Rails, activeadmin编写，是假设steem必须的一个项目</p>
<ul>
<li>dbadmin <a href="https://github.com/steemit/dbadmin" target="_blank" rel="external">https://github.com/steemit/dbadmin</a> </li>
<li>activeadmin <a href="https://github.com/activeadmin/activeadmin" target="_blank" rel="external">https://github.com/activeadmin/activeadmin</a></li>
</ul>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="安装rvm"><a href="#安装rvm" class="headerlink" title="安装rvm"></a>安装rvm</h2><p>ruby要求2.3.1<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB</div><div class="line">\curl <span class="_">-s</span>SL https://get.rvm.io | bash <span class="_">-s</span> stable</div></pre></td></tr></table></figure></p>
<h2 id="安装Rails"><a href="#安装Rails" class="headerlink" title="安装Rails"></a>安装Rails</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gem install bundler</div><div class="line">gem install rails</div></pre></td></tr></table></figure>
<h2 id="安装dbadmin"><a href="#安装dbadmin" class="headerlink" title="安装dbadmin"></a>安装dbadmin</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> https://github.com/steemit/dbadmin</div><div class="line"><span class="built_in">cd</span> dbadmin</div><div class="line"></div><div class="line"><span class="comment"># 安装相关依赖</span></div><div class="line">bundle install</div></pre></td></tr></table></figure>
<h3 id="修改数据库配置"><a href="#修改数据库配置" class="headerlink" title="修改数据库配置"></a>修改数据库配置</h3><p>app/config/database.yml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">development:</div><div class="line">  &lt;&lt;: *default</div><div class="line">  host: xxx.xxx.xxx.xxx</div><div class="line">  username: xxx</div><div class="line">  password: xxx</div><div class="line">  port: xxx</div></pre></td></tr></table></figure>
<h3 id="写入数据库"><a href="#写入数据库" class="headerlink" title="写入数据库"></a>写入数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rake db:migrate RAILS_ENV=development</div><div class="line">rake db:seed</div></pre></td></tr></table></figure>
<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bundle <span class="built_in">exec</span> unicorn -c config/unicorn.rb <span class="_">-d</span> -E development</div></pre></td></tr></table></figure>
<h1 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h1><h2 id="GeoLite2-City-mmdb"><a href="#GeoLite2-City-mmdb" class="headerlink" title="GeoLite2-City.mmdb"></a>GeoLite2-City.mmdb</h2><p>异常：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dbadmin/app/models/user.rb:6:in `initialize&apos;: GeoIP2Compat - Error opening the specified MaxMind DB file: /xxx/dbadmin/GeoLite2-City.mmdb (GeoIP2Compat::Error)</div></pre></td></tr></table></figure></p>
<p>下载：<a href="http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz" target="_blank" rel="external">http://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz</a><br>解压后放到dbadmin/目录下，文件名GeoLite2-City.mmdb</p>
<h2 id="找不到-libmysqlclient-18-dylib"><a href="#找不到-libmysqlclient-18-dylib" class="headerlink" title="找不到 libmysqlclient.18.dylib"></a>找不到 libmysqlclient.18.dylib</h2><p>异常：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/xxx/.rvm/gems/ruby-2.3.1/gems/mysql2-0.4.4/lib/mysql2.rb:31:in `require&apos;: dlopen(/xxx/.rvm/gems/ruby-2.3.1/gems/mysql2-0.4.4/lib/mysql2/mysql2.bundle, 9): Library not loaded: libmysqlclient.18.dylib  (LoadError)</div></pre></td></tr></table></figure></p>
<p>解决方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib /usr/lib/libmysqlclient.18.dylib</div></pre></td></tr></table></figure></p>
<p>如果是mac, 上面一第命令执行失败，提示Operation not permitted，就需要关闭Rootless机制</p>
<p>重启按住 Command+R，进入恢复模式，打开Terminal</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">csrutil disable</div></pre></td></tr></table></figure>
<p>重启即可。如果要恢复默认，那么</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">csrutil enable</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;dbadmin是steem网站的管理平台，使用Ruby on Rails, activeadmin编写，是假设steem必须的一个项目&lt;/p
    
    </summary>
    
    
      <category term="steem" scheme="http://blog.boshu.org/tags/steem/"/>
    
      <category term="dbadmin" scheme="http://blog.boshu.org/tags/dbadmin/"/>
    
      <category term="install" scheme="http://blog.boshu.org/tags/install/"/>
    
      <category term="安装" scheme="http://blog.boshu.org/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix</title>
    <link href="http://blog.boshu.org/2017/07/zabbix-install/"/>
    <id>http://blog.boshu.org/2017/07/zabbix-install/</id>
    <published>2017-07-03T07:08:38.000Z</published>
    <updated>2017-07-04T10:12:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> ~/tmp/</div><div class="line"></div><div class="line"><span class="comment">#下载</span></div><div class="line">wget https://jaist.dl.sourceforge.net/project/zabbix/ZABBIX%20Latest%20Stable/3.0.9/zabbix-3.0.9.tar.gz</div><div class="line">tar -zxvf zabbix-3.0.9.tar.gz</div><div class="line"><span class="built_in">cd</span> zabbix-3.0.9</div><div class="line"></div><div class="line"><span class="comment">#编译安装server和agent</span></div><div class="line">./configure --prefix=/xxx/zabbix --enable-server --enable-agent --with-mysql --with-libcurl</div><div class="line">make</div><div class="line">make install</div><div class="line"></div><div class="line"><span class="comment">#导入数据</span></div><div class="line"><span class="built_in">cd</span> database;</div><div class="line"></div><div class="line"><span class="comment">#导入数据，导入顺序错误，可能会报错</span></div><div class="line">mysql -h&#123;host&#125; -P&#123;port&#125; -u&#123;user&#125; -p&#123;password&#125; &#123;dbname&#125; &lt; mysql/schema.sql</div><div class="line">mysql -h&#123;host&#125; -P&#123;port&#125; -u&#123;user&#125; -p&#123;password&#125; &#123;dbname&#125; &lt; mysql/images.sql</div><div class="line">mysql -h&#123;host&#125; -P&#123;port&#125; -u&#123;user&#125; -p&#123;password&#125; &#123;dbname&#125; &lt; mysql/data.sql</div><div class="line"></div><div class="line"><span class="comment">#复制管理平台到对应目录</span></div><div class="line"><span class="comment">#网有第一次访问的时候有安装向导，会检测服务器配置和输入数据库用户名和密码</span></div><div class="line"><span class="built_in">cd</span> ..</div><div class="line">cp -r frontends/php ~/www/zabbix</div></pre></td></tr></table></figure>
<h1 id="修改zabbix-server配置"><a href="#修改zabbix-server配置" class="headerlink" title="修改zabbix server配置"></a>修改zabbix server配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#日志</div><div class="line">LogFile=/xxx/server.log</div><div class="line"></div><div class="line">#数据库相关配置，zabbix无法读取网站的配置，需要单独配置</div><div class="line">DBHost=xxx</div><div class="line">DBName=xxx</div><div class="line">DBUser=xxx</div><div class="line">DBPassword=xxx</div><div class="line">DBPort=xxx</div></pre></td></tr></table></figure>
<h1 id="修改zabbix-agent配置"><a href="#修改zabbix-agent配置" class="headerlink" title="修改zabbix agent配置"></a>修改zabbix agent配置</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">LogFile=/xxx/agentd.log</div><div class="line">#server IP列表，相当于一个白名单，只有在白名单内的IP才可以读取数据</div><div class="line">Server=xxx.xx.xxx.xx,xxx.xx.xxx.xx</div><div class="line">#加载子配置，如果要自定义采集点，建议开启，对应的配置文件可以复制到这个目录里</div><div class="line">Include=/xxx/zabbix_agentd.conf.d/*.conf</div></pre></td></tr></table></figure>
<h1 id="管理平台配置"><a href="#管理平台配置" class="headerlink" title="管理平台配置"></a>管理平台配置</h1><ul>
<li>用apache/nginx配置</li>
<li>需要PHP支持</li>
<li>有安装向导</li>
<li>默认用户名/密码：admin / zabbix</li>
</ul>
<h1 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h1><h2 id="短信配置"><a href="#短信配置" class="headerlink" title="短信配置"></a>短信配置</h2><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>本人有短信接口<br>/xxx/zabbix/share/zabbix/alertscripts/sendsms.php<br>“/xxx/zabbix” 为zabbix安装目录<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env php</span></div><div class="line"><span class="meta">&lt;?php</span></div><div class="line">error_reporting(<span class="number">0</span>);</div><div class="line">$to=$argv[<span class="number">1</span>];</div><div class="line">$subject=$argv[<span class="number">2</span>];</div><div class="line">$body=$argv[<span class="number">3</span>];</div><div class="line"></div><div class="line">$data = [</div><div class="line">	<span class="string">'mobile'</span>=&gt;$to,</div><div class="line">	<span class="string">'message'</span>=&gt;$subject. <span class="string">'【xxxx】'</span>,</div><div class="line">];</div><div class="line"></div><div class="line">$ch = curl_init();</div><div class="line">curl_setopt($ch, CURLOPT_URL, <span class="string">"http://xxxx/v1/send.json"</span>);</div><div class="line"></div><div class="line">curl_setopt($ch, CURLOPT_HTTP_VERSION  , CURL_HTTP_VERSION_1_0 );</div><div class="line">curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, <span class="number">30</span>);</div><div class="line">curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="keyword">TRUE</span>);</div><div class="line">curl_setopt($ch, CURLOPT_HEADER, <span class="keyword">FALSE</span>);</div><div class="line"></div><div class="line">curl_setopt($ch, CURLOPT_HTTPAUTH , CURLAUTH_BASIC);</div><div class="line">curl_setopt($ch, CURLOPT_USERPWD  , <span class="string">'api:xxxx'</span>);</div><div class="line"></div><div class="line">curl_setopt($ch, CURLOPT_POST, <span class="keyword">TRUE</span>);</div><div class="line">curl_setopt($ch, CURLOPT_POSTFIELDS, $data);</div><div class="line"></div><div class="line">$res = curl_exec( $ch );</div><div class="line">curl_close( $ch );</div><div class="line">$res  = curl_error( $ch );</div><div class="line">var_dump($res);</div></pre></td></tr></table></figure></p>
<p>脚本需要可执行权限</p>
<h3 id="管理平台配置-1"><a href="#管理平台配置-1" class="headerlink" title="管理平台配置"></a>管理平台配置</h3><p><img src="/uploads/zabbix-1.png" alt="管理平台配置"></p>
<h2 id="邮件配置"><a href="#邮件配置" class="headerlink" title="邮件配置"></a>邮件配置</h2><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env php</span></div><div class="line"><span class="meta">&lt;?php</span></div><div class="line">$to = $argv[<span class="number">1</span>];</div><div class="line">$subject = $argv[<span class="number">2</span>];</div><div class="line">$body = $argv[<span class="number">3</span>];</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">thislog</span><span class="params">($info)</span> </span>&#123;</div><div class="line">	$fp = fopen(<span class="string">'/xxx/zabbix/script.log'</span>, <span class="string">'a'</span>);</div><div class="line">	fwrite($fp, date(<span class="string">'Y-m-d H:i:s'</span>). <span class="string">'  '</span>. $info . PHP_EOL);</div><div class="line">	fclose($fp);</div><div class="line">&#125;</div><div class="line"></div><div class="line">thislog(<span class="string">"start! to:$to subject:$subject body:$body"</span>);</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line"></div><div class="line">	<span class="keyword">require</span> <span class="keyword">__DIR__</span>.<span class="string">'/PHPMailer/PHPMailerAutoload.php'</span>;</div><div class="line"></div><div class="line">	$mail = <span class="keyword">new</span> PHPMailer;</div><div class="line"></div><div class="line">	<span class="comment">//$mail-&gt;SMTPDebug = 3;                               // Enable verbose debug output</span></div><div class="line"></div><div class="line">	$mail-&gt;isSMTP();                                      <span class="comment">// Set mailer to use SMTP</span></div><div class="line">	$mail-&gt;Host = <span class="string">'smtp.exmail.qq.com'</span>;  <span class="comment">// Specify main and backup SMTP servers</span></div><div class="line">	$mail-&gt;SMTPAuth = <span class="keyword">true</span>;                               <span class="comment">// Enable SMTP authentication</span></div><div class="line">	$mail-&gt;Username = <span class="string">'xxx'</span>;           <span class="comment">// SMTP username</span></div><div class="line">	$mail-&gt;Password = <span class="string">'xxx'</span>;                        <span class="comment">// SMTP password</span></div><div class="line">	$mail-&gt;SMTPSecure = <span class="string">'ssl'</span>;                            <span class="comment">// Enable TLS encryption, `ssl` also accepted</span></div><div class="line">	$mail-&gt;Port = <span class="number">465</span>;                                    <span class="comment">// TCP port to connect to</span></div><div class="line"></div><div class="line">	$mail-&gt;setFrom(<span class="string">'xxx'</span>, <span class="string">'Zabbix'</span>);</div><div class="line">	$mail-&gt;addAddress($to, <span class="string">'bin'</span>);</div><div class="line"></div><div class="line">	$mail-&gt;Subject = $subject;</div><div class="line">	$mail-&gt;Body = $body;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (!$mail-&gt;send()) &#123;</div><div class="line"></div><div class="line">		thislog(<span class="string">"send fail! error:$mail-&gt;ErrorInfo to:$to subject:$subject body:$body"</span>);</div><div class="line">		<span class="keyword">exit</span>(<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> &#123;</div><div class="line">		thislog(<span class="string">"send success! to:$to subject:$subject body:$body"</span>);</div><div class="line">		<span class="keyword">exit</span>(<span class="number">1</span>);</div><div class="line">	&#125;</div><div class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</div><div class="line">    $msg = $e-&gt;getMessage();</div><div class="line">	thislog(<span class="string">"exception: $msg to:$to subject:$subject body:$body"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>依赖 <a href="https://github.com/PHPMailer/PHPMailer/" target="_blank" rel="external">https://github.com/PHPMailer/PHPMailer/</a></p>
<h3 id="管理平台配置-2"><a href="#管理平台配置-2" class="headerlink" title="管理平台配置"></a>管理平台配置</h3><p>与短信相同</p>
<h2 id="报警配置"><a href="#报警配置" class="headerlink" title="报警配置"></a>报警配置</h2><p>必须配置：</p>
<ul>
<li>配置(Administration) -&gt; 动作(Actions)</li>
<li>管理(Administration) -&gt; 用户(Users) -&gt; 报警媒介(Media)</li>
</ul>
<h2 id="自定义监控项"><a href="#自定义监控项" class="headerlink" title="自定义监控项"></a>自定义监控项</h2><p>  以后再说吧。。。</p>
<h2 id="图表中文乱码解决"><a href="#图表中文乱码解决" class="headerlink" title="图表中文乱码解决"></a>图表中文乱码解决</h2><p>上传中文字体到网站：/fonts/目录<br>本例为微软雅黑字体（下载 uploads/YaHei.Consolas.ttf ）<br>修改文件 /include/defines.inc.php<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sed -i <span class="string">'s/DejaVuSans/YaHei.Consolas/g'</span> ~/www/zabbix/include/defines.inc.php</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h1&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div cl
    
    </summary>
    
    
      <category term="zabbix" scheme="http://blog.boshu.org/tags/zabbix/"/>
    
  </entry>
  
  <entry>
    <title>linux命令行的一些技巧和脚本收集</title>
    <link href="http://blog.boshu.org/2017/03/linux-cli-skill/"/>
    <id>http://blog.boshu.org/2017/03/linux-cli-skill/</id>
    <published>2017-03-06T15:54:52.000Z</published>
    <updated>2017-03-27T06:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一些技巧"><a href="#一些技巧" class="headerlink" title="一些技巧"></a>一些技巧</h1><table>
<thead>
<tr>
<th>技巧</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>sudo !!</td>
<td>以root权限执行上一条命令（注意上一条命令的内容，以免发生意外）</td>
</tr>
<tr>
<td>!+数字</td>
<td>执行history中相应编号的命令</td>
</tr>
<tr>
<td>^foo^bar</td>
<td>将上一条命令中的第一个字符串”foo”替换成“bar”后执行</td>
</tr>
<tr>
<td>!!:gs/foo/bar</td>
<td>将上一条命令中的字符串“foo”全部替换成”bar”，然后执行</td>
</tr>
<tr>
<td>C-x e</td>
<td>打开编辑器编辑命令，这个编辑器是环境变量中EDITOR的值</td>
</tr>
<tr>
<td>Alt+./ESC+.</td>
<td>将最近一条命令的参数输出——不是作为结果打印出来，而是在终端提示符后面输出，还可以进行编辑</td>
</tr>
</tbody>
</table>
<h1 id="一些命令"><a href="#一些命令" class="headerlink" title="一些命令"></a>一些命令</h1><h2 id="查找src目录下有printf这个内容的cpp文件"><a href="#查找src目录下有printf这个内容的cpp文件" class="headerlink" title="查找src目录下有printf这个内容的cpp文件"></a>查找src目录下有printf这个内容的cpp文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep src/*.cpp <span class="_">-e</span> <span class="built_in">printf</span> | cut <span class="_">-d</span> <span class="string">':'</span> <span class="_">-f</span>1 | uniq</div></pre></td></tr></table></figure>
<h2 id="按文件大小增序打印出当前目录下的文件名及其文件大小-单位字节）"><a href="#按文件大小增序打印出当前目录下的文件名及其文件大小-单位字节）" class="headerlink" title="按文件大小增序打印出当前目录下的文件名及其文件大小(单位字节）"></a>按文件大小增序打印出当前目录下的文件名及其文件大小(单位字节）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls <span class="_">-l</span> | sed <span class="string">'1d'</span> | sort -n -k5 | awk <span class="string">'&#123;printf "%15s %10s\n", $9,$5&#125;'</span></div></pre></td></tr></table></figure>
<h2 id="将当前目录下最大的5个文件移动到-five-biggest-这个目录下"><a href="#将当前目录下最大的5个文件移动到-five-biggest-这个目录下" class="headerlink" title="将当前目录下最大的5个文件移动到 ~/five-biggest/ 这个目录下"></a>将当前目录下最大的5个文件移动到 ~/five-biggest/ 这个目录下</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ls <span class="_">-l</span> | sed <span class="string">'1d'</span> | sort -n -r -k5 | head -n 5 | xargs -I &#123;&#125; mv &#123;&#125; ~/five-biggest/</div></pre></td></tr></table></figure>
<h2 id="删除文件中的空行"><a href="#删除文件中的空行" class="headerlink" title="删除文件中的空行"></a>删除文件中的空行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat a.txt | sed <span class="_">-e</span> <span class="string">'/^$/d'</span></div></pre></td></tr></table></figure>
<h2 id="列出用的最多的命令"><a href="#列出用的最多的命令" class="headerlink" title="列出用的最多的命令"></a>列出用的最多的命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">history</span> -1 | awk <span class="string">'&#123;a[$2]++&#125;END&#123;for(i in a)&#123;print a[i] " " i&#125;&#125;'</span> | sort -rn | head</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一些技巧&quot;&gt;&lt;a href=&quot;#一些技巧&quot; class=&quot;headerlink&quot; title=&quot;一些技巧&quot;&gt;&lt;/a&gt;一些技巧&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;技巧&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbod
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.boshu.org/tags/linux/"/>
    
      <category term="cli" scheme="http://blog.boshu.org/tags/cli/"/>
    
      <category term="技巧" scheme="http://blog.boshu.org/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Nginx fastcgi cache</title>
    <link href="http://blog.boshu.org/2017/02/2017-02-nginx-cache/"/>
    <id>http://blog.boshu.org/2017/02/2017-02-nginx-cache/</id>
    <published>2017-02-27T16:00:00.000Z</published>
    <updated>2017-06-26T06:36:43.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="相关参数"><a href="#相关参数" class="headerlink" title="相关参数"></a>相关参数</h1><h2 id="fastcgi-cache-path"><a href="#fastcgi-cache-path" class="headerlink" title="fastcgi_cache_path"></a>fastcgi_cache_path</h2><blockquote>
<p>syntax: fastcgi_cache_path path [ levels = levels ] keys_zone = name : size [ inactive = time ] [ max_size = size ] [ loader_files = number ] [ &gt; loader_sleep = time ] [ loader_threshold = time ]<br>default: none<br>context: http</p>
</blockquote>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">fastcgi_cache_path</span> /dev/shm/nginx_cache levels=<span class="number">1</span>:<span class="number">2</span> keys_zone=fcgicache:<span class="number">10m</span> inactive=<span class="number">50m</span> max_size=<span class="number">128m</span>;</div></pre></td></tr></table></figure>
<ul>
<li>/tmp/nginx/fcgi/cache 缓存目录</li>
<li>keys_zone=fcgicache:10m keys_zone是这个缓存空间的名字，10m是用多少内存（主要缓存key和文件元信息，不会缓存页面）,这个会在fastcgi_cache中引用</li>
<li>levels=1:2 设置目录哈希层级，比如2:2会生成256*256个字目录</li>
<li>inactive 失效时间</li>
<li>max_size 最多用多少空间</li>
</ul>
<h2 id="fastcgi-temp-path"><a href="#fastcgi-temp-path" class="headerlink" title="fastcgi_temp_path"></a>fastcgi_temp_path</h2><blockquote>
<p>Syntax:    fastcgi_temp_path path [ level1 [ level2 [ level3 ]]]<br>Default:    fastcgi_temp<br>Context:    http server location</p>
</blockquote>
<p>生成fastcgi_cache临时文件目录，fastcgi_cache缓存是先写在fastcgi_temp_path再移到fastcgi_cache_path，所以这两个目录最好在同一个分区，从0.8.9之后可以在不同的分区，不过还是建议放同一分区</p>
<h2 id="fastcgi-cache"><a href="#fastcgi-cache" class="headerlink" title="fastcgi_cache"></a>fastcgi_cache</h2><blockquote>
<p>Syntax:    fastcgi_cache zone | off;<br>Default: off;<br>Context:    http, server, location</p>
</blockquote>
<p>用哪个缓存空间，fastcgi_cache_path定义</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">fastcgi_cache</span> fcgicache;</div></pre></td></tr></table></figure>
<blockquote>
<p>Syntax:    fastcgi_cache_key string;<br>Default:    —<br>Context:    http, server, location</p>
</blockquote>
<p>设置缓存的key<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">fastcgi_cache_key</span> <span class="string">"<span class="variable">$scheme</span><span class="variable">$request_method</span><span class="variable">$host</span><span class="variable">$request_uri</span>"</span>;</div></pre></td></tr></table></figure></p>
<p>建议：在http层定义一个，如果在server或location要修改的必要，再进行修改</p>
<h2 id="fastcgi-cache-methods"><a href="#fastcgi-cache-methods" class="headerlink" title="fastcgi_cache_methods"></a>fastcgi_cache_methods</h2><blockquote>
<p>Syntax:      fastcgi_cache_methods GET | HEAD | POST …;<br>Default:  GET HEAD;<br>Context:  http, server, location</p>
</blockquote>
<p>允许缓存的请求类型</p>
<h2 id="fastcgi-cache-min-uses"><a href="#fastcgi-cache-min-uses" class="headerlink" title="fastcgi_cache_min_uses"></a>fastcgi_cache_min_uses</h2><blockquote>
<p>Syntax:    fastcgi_cache_min_uses number;<br>Default:  1;<br>Context:    http, server, location</p>
</blockquote>
<p>最少要被请求多少次才会缓存</p>
<h2 id="fastcgi-cache-use-stale"><a href="#fastcgi-cache-use-stale" class="headerlink" title="fastcgi_cache_use_stale"></a>fastcgi_cache_use_stale</h2><blockquote>
<p>syntax: fastcgi_cache_use_stale [error | timeout | invalid_header | updating | http_500 | http_503 | http_403 | http_404 | off]<br>default: fastcgi_cache_use_stale off;<br>context: http, server, location</p>
</blockquote>
<p>定义哪些情况下用过期缓存<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">fastcgi_cache_use_stale</span> <span class="literal">error</span> timeout invalid_header http_500 http_503 updating;</div></pre></td></tr></table></figure></p>
<h2 id="fastcgi-cache-valid"><a href="#fastcgi-cache-valid" class="headerlink" title="fastcgi_cache_valid"></a>fastcgi_cache_valid</h2><blockquote>
<p>Syntax:    fastcgi_cache_valid [code …] time;<br>Default:    —<br>Context:    http, server, location</p>
</blockquote>
<p>针对不同的状态，设置不同的缓存时间，可多行<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">fastcgi_cache_valid</span> <span class="number">200</span> <span class="number">302</span>  <span class="number">10m</span>;</div><div class="line"><span class="attribute">fastcgi_cache_valid</span> <span class="number">301</span>      <span class="number">1h</span>;</div><div class="line"><span class="attribute">fastcgi_cache_valid</span> any      <span class="number">1m</span>;</div><div class="line"><span class="attribute">fastcgi_cache_valid</span> <span class="number">1m</span>;  <span class="comment">#等同于 fastcgi_cache_valid 200 301 302 1m;</span></div></pre></td></tr></table></figure></p>
<h1 id="在响应头中设置缓存时间"><a href="#在响应头中设置缓存时间" class="headerlink" title="在响应头中设置缓存时间"></a>在响应头中设置缓存时间</h1><p>缓存的参数也可以直接在响应头中设置。这比使用指令设置缓存时间具有更高的优先级。</p>
<ul>
<li>“X-Accel-Expires”标头字段设置响应的缓存时间（以秒为单位）。零禁用缓存。如果值以@前缀开始，则它设置以当前时间开始的以秒为单位的绝对时间，直到响应可以被缓存。</li>
<li>如果报头不包括“X-Accel-Expires”字段，则可以在报头字段“Expires”或“Cache-Control”中设置高速缓存的参数。</li>
<li>如果头包括“Set-Cookie”字段，则这样的响应将不被缓存。</li>
<li>如果头中Vary *，则这样的响应将不被缓存（1.7.7）。如果报头包括具有另一个值的“Vary”字段，则这样的响应将被缓存，考虑相应的请求报头字段（1.7.7）。</li>
</ul>
<h1 id="为什么没有被缓存？"><a href="#为什么没有被缓存？" class="headerlink" title="为什么没有被缓存？"></a>为什么没有被缓存？</h1><ul>
<li>Nginx fastcgi_cache在缓存后端fastcgi响应时，当响应里包含“set-cookie”时，不缓存;</li>
<li>当响应头包含Expires时，如果过期时间大于当前服务器时间，则nginx_cache会缓存该响应，否则，则不缓存;</li>
<li>当响应头包含Cache-Control时，如果Cache-Control参数值为no-cache、no-store、private中任意一个时，则不缓存</li>
<li>头中Vary * (1.7.7)</li>
</ul>
<p>可以使用fastcgi_ignore_headers指令禁用对这些响应头字段中的一个或多个的处理。</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">fastcgi_ignore_headers</span> Expires Cache-Control;</div><div class="line"><span class="attribute">fastcgi_ignore_headers</span> Set-Cookie; <span class="comment">#如果加入这条，则后端无法设置cookie,session</span></div></pre></td></tr></table></figure>
<h1 id="配置实例"><a href="#配置实例" class="headerlink" title="配置实例"></a>配置实例</h1><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">http&#123;</div><div class="line">  #...</div><div class="line">  fastcgi_cache_path /dev/shm/nginx_cache levels=1:2 keys_zone=fcgicache:10m inactive=30m max_size=128m;</div><div class="line">  fastcgi_cache_key  "$scheme$request_method$host$request_uri";</div><div class="line">  fastcgi_temp_path  /dev/shm/nginx_tmp;</div><div class="line">  #...</div><div class="line"></div><div class="line">  server&#123;</div><div class="line">    #...</div><div class="line">    location ~ \.php($|/) &#123;</div><div class="line">        #...</div><div class="line">        fastcgi_cache fcgicache; #用哪个缓存空间</div><div class="line">        fastcgi_cache_valid 1m; #200 301 302缓存1分钟</div><div class="line">        fastcgi_cache_valid 404 500 502 503 504 0s; #404 500 502 503 504不缓存</div><div class="line">        fastcgi_cache_valid any 3h; #其它缓存3小时</div><div class="line">        fastcgi_cache_min_uses 1; #经过一次请求后缓存</div><div class="line">        fastcgi_cache_use_stale error timeout invalid_header http_500 http_503 updating; #哪些情况下用过期缓存</div><div class="line">        fastcgi_ignore_headers Expires Cache-Control; #忽略Expires Cache-Control头</div><div class="line">        #...</div><div class="line">    &#125;</div><div class="line">    #...</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><ul>
<li>$upstream_response_time为过期时间</li>
<li>$upstream_cache_status 表示此请求响应来自cache的状态</li>
</ul>
<h2 id="缓存状态："><a href="#缓存状态：" class="headerlink" title="缓存状态："></a>缓存状态：</h2><table>
<thead>
<tr>
<th>状态</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>MISS</td>
<td>未命中</td>
</tr>
<tr>
<td>EXPIRED</td>
<td>expired, request was passed to backend Cache已过期</td>
</tr>
<tr>
<td>UPDATING</td>
<td>expired, stale response was used due to proxy/fastcgi_cache_use_stale updating Cache已过期，(被其他nginx子进程)更新中</td>
</tr>
<tr>
<td>STALE</td>
<td>expired, stale response was used due to proxy/fastcgi_cache_use_stale Cache已过期，响应数据不合法，被污染HIT 命中cache</td>
</tr>
</tbody>
</table>
<h1 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h1><p>逐个测试，测试时，注释其他的<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">header(<span class="string">"Expires: "</span>.gmdate(<span class="string">"D, d M Y H:i:s"</span>, time()+<span class="number">10000</span>).<span class="string">' GMT'</span>);</div><div class="line">header(<span class="string">"Expires: "</span>.gmdate(<span class="string">"D, d M Y H:i:s"</span>, time()<span class="number">-99999</span>).<span class="string">' GMT'</span>);</div><div class="line">header(<span class="string">"X-Accel-Expires:5"</span>); <span class="comment">// 5s</span></div><div class="line">header(<span class="string">"Cache-Control: no-cache"</span>); <span class="comment">//no cache</span></div><div class="line">header(<span class="string">"Cache-Control: no-store"</span>); <span class="comment">//no cache</span></div><div class="line">header(<span class="string">"Cache-Control: private"</span>); <span class="comment">//no cache</span></div><div class="line">header(<span class="string">"Cache-Control: max-age=10"</span>); <span class="comment">//cache 10s</span></div><div class="line">setcookie(<span class="string">'hello'</span>,<span class="string">"testaaaa"</span>); <span class="comment">//no cache</span></div><div class="line"><span class="keyword">echo</span> date(<span class="string">"Y-m-d H:i:s"</span>,time());</div><div class="line"><span class="keyword">exit</span>;</div></pre></td></tr></table></figure></p>
<p>程序调用session_start时，php的session拓展自己输出的。session.cache_limit参数来决定输出包含哪种Expires的header，默认是nocache，修改php.ini的session.cache_limit参数为“none”即可让session模块不再输出这些http 响应头。或在调用session_start之前，使用session_cache_limiter函数来指定下该参数值。那为什么要在使用session时，发Expires、Cache-Control的http response header呢？我猜测了下，需要session时，基本上是用户跟服务器有交互，那么，既然有交互，就意味着用户的每次交互结果也可能不一样，就不能cache这个请求的结果，给返回给这个用户。同时，每个用户的交互结果都是不一样的，nginx也就不能把包含特殊Cache-Control的个人响应cache给其他人提供了。  </p>
<p>非要用session_start 可以如下方式</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">session_cache_limiter(<span class="string">"none"</span>);</div><div class="line">session_start();</div><div class="line"><span class="keyword">echo</span> date(<span class="string">"Y-m-d H:i:s"</span>,time());</div><div class="line"><span class="keyword">exit</span>;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;相关参数&quot;&gt;&lt;a href=&quot;#相关参数&quot; class=&quot;headerlink&quot; title=&quot;相关参数&quot;&gt;&lt;/a&gt;相关参数&lt;/h1&gt;&lt;h2 id=&quot;fastcgi-cache-path&quot;&gt;&lt;a href=&quot;#fastcgi-cache-path&quot; class=&quot;
    
    </summary>
    
    
      <category term="nginx" scheme="http://blog.boshu.org/tags/nginx/"/>
    
      <category term="cache" scheme="http://blog.boshu.org/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>Mysql性能分析</title>
    <link href="http://blog.boshu.org/2016/09/2016-09-mysql-explain/"/>
    <id>http://blog.boshu.org/2016/09/2016-09-mysql-explain/</id>
    <published>2016-09-19T16:00:00.000Z</published>
    <updated>2017-03-27T06:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>#Mysql性能分析</p>
<p>执行mysql语句，只要在前面加上 explain 就可以分析查询语句的效率。</p>
<p>例如：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">explain</span> <span class="keyword">select</span> focus_uid <span class="keyword">from</span> user_focus <span class="keyword">where</span> uid = xxx;</div></pre></td></tr></table></figure></p>
<p>explain显示了mysql如何使用索引来处理select语句以及连接表。可以帮助选择更好的索引和写出更优化的查询语句。</p>
<p>具体解释如下：</p>
<p>id 本次 select 的标识符。在查询中每个 select都有一个顺序的数值。<br>select_type select 的类型，可能会有以下几种：</p>
<ul>
<li>simple: 简单的 select （没有使用 union或子查询）</li>
<li>primary: 最外层的 select。</li>
<li>union: 第二层，在select 之后使用了 union。</li>
<li>dependent union: union 语句中的第二个select，依赖于外部子查询</li>
<li>subquery: 子查询中的第一个 select</li>
<li>dependent subquery: 子查询中的第一个 subquery依赖于外部的子查询</li>
<li><p>derived: 派生表 select（from子句中的子查询）</p>
</li>
<li><p>table：显示这一行的数据是关于哪张表的  </p>
</li>
<li>type：这是重要的列，显示连接使用了何种类型。从最好到最差的连接类型为const、eq_ref、ref、range、index 和ALL  </li>
<li>system:表只有一行记录（等于系统表）。这是 const表连接类型的一个特例。  </li>
<li>const:表中最多只有一行匹配的记录，它在查询一开始的时候就会被读取出来。由于只有一行记录，在余下的优化程序里该行记录的字段值可以被当作是一个 恒定值。const表查询起来非常快，因为只要读取一次！const 用于在和 primary key 或unique 索引中有固定值比较的情形。下面的几个查询中，tbl_name 就是 c表了。  </li>
<li>eq_ref:从该表中会有一行记录被读取出来以和从前一个表中读取出来的记录做联合。与const类型不同的是，这是最好的连接类型。它用在索引所有部 分都用于做连接并且这个索引是一个primary key 或 unique 类型。eq_ref可以用于在进行”=”做比较时检索字段。比较的值可以是固定值或者是表达式，表达示中可以使用表里的字段，它们在读表之前已经准备好 了。  </li>
<li>ref: 该表中所有符合检索值的记录都会被取出来和从上一个表中取出来的记录作联合。ref用于连接程序使用键的最左前缀或者是该键不是 primary key 或 unique索引（换句话说，就是连接程序无法根据键值只取得一条记录）的情况。当根据键值只查询到少数几条匹配的记录时，这就是一个不错的连接类型。 ref还可以用于检索字段使用 =操作符来比较的时候。  </li>
<li>ref_or_null: 这种连接类型类似 ref，不同的是mysql会在检索的时候额外的搜索包含null 值的记录。  </li>
<li>range: 只有在给定范围的记录才会被取出来，利用索引来取得一条记录。key字段表示使用了哪个索引。key_len字段包括了使用的键的最长部分。这种类型时 ref 字段值是 null。range用于将某个字段和一个定植用以下任何操作符比较时 =, &lt;&gt;, &gt;,&gt;=, &lt;, &lt;=, is null, &lt;=&gt;, between, 或 in。  </li>
<li>index: 连接类型跟 all 一样，不同的是它只扫描索引树。它通常会比 all快点，因为索引文件通常比数据文件小。mysql在查询的字段知识单独的索引的一部分的情况下使用这种连接类型。  </li>
<li>all: 将对该表做全部扫描以和从前一个表中取得的记录作联合。这时候如果第一个表没有被标识为const的话就不大好了，在其他情况下通常是非常糟糕的。正常地，可以通过增加索引使得能从表中更快的取得记录以避免all。  </li>
</ul>
<p>得保证查询至少达到range级别，最好能达到ref，否则就可能会出现性能问题。  </p>
<ul>
<li>possible_keys：显示可能应用在这张表中的索引。如果为空，没有可能的索引。可以为相关的域从WHERE语句中选择一个合适的语句  </li>
<li>key：    实际使用的索引。如果为NULL，则没有使用索引。很少的情况下，MYSQL会选择优化不足的索引。这种情况下，可以在SELECT语句中使用force  INDEX（indexname）来强制使用一个索引或者用IGNORE INDEX（indexname）来强制MYSQL忽略索引  </li>
<li>key_len：使用的索引的长度。在不损失精确性的情况下，长度越短越好  </li>
<li>ref：    显示索引的哪一列被使用了，如果可能的话，是一个常数  </li>
<li>rows：   MYSQL认为必须检查的用来返回请求数据的行数  </li>
<li>Extra：  关于MYSQL如何解析查询的额外信息。将在表4.3中讨论，但这里可以看到的坏的例子是Using temporary和Using filesort，意思MYSQL根本不能使用索引，结果是检索会很慢  </li>
</ul>
<p>extra列返回的描述的意义  </p>
<ul>
<li>Distinct:一旦MYSQL找到了与行相联合匹配的行，就不再搜索了  </li>
<li>Not exists: MYSQL优化了LEFT JOIN，一旦它找到了匹配LEFT JOIN标准的行，就不再搜索了  </li>
<li><p>Range checked for each Record（index map:#）:没有找到理想的索引，因此对于从前面表中来的每一个行组合，MYSQL检查使用哪个索引，并用它来从表中返回行。这是使用索引的最慢的连接之一  </p>
</li>
<li><p>Using filesort: mysql需要额外的做一遍从而以排好的顺序取得记录。排序程序根据连接的类型遍历所有的记录，并且将所有符合 where条件的记录的要排序的键和指向记录的指针存储起来。这些键已经排完序了，对应的记录也会按照排好的顺序取出来。  </p>
</li>
<li><p>Using index: 列数据是从仅仅使用了索引中的信息而没有读取实际的行动的表返回的，这发生在对表的全部的请求列都是同一个索引的部分的时候  </p>
</li>
<li>using temporary: mysql需要创建临时表存储结果以完成查询。这种情况通常发生在查询时包含了groupby 和 order by 子句，它以不同的方式列出了各个字段。  </li>
<li>using where</li>
</ul>
<p>where子句将用来限制哪些记录匹配了下一个表或者发送给客户端。除非你特别地想要取得或者检查表种的所有记录，否则的话当查询的extra 字段值不是 using where 并且表连接类型是 all 或 index时可能表示有问题。  </p>
<p>如果你想要让查询尽可能的快，那么就应该注意 extra 字段的值为usingfilesort 和 using temporary 的情况。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;#Mysql性能分析&lt;/p&gt;
&lt;p&gt;执行mysql语句，只要在前面加上 explain 就可以分析查询语句的效率。&lt;/p&gt;
&lt;p&gt;例如：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
    
    </summary>
    
    
      <category term="mysql" scheme="http://blog.boshu.org/tags/mysql/"/>
    
      <category term="性能" scheme="http://blog.boshu.org/tags/%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>mysql的一些函数</title>
    <link href="http://blog.boshu.org/2015/09/2015-09-mysql-function/"/>
    <id>http://blog.boshu.org/2015/09/2015-09-mysql-function/</id>
    <published>2015-09-23T15:10:52.000Z</published>
    <updated>2017-03-27T06:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h1><p>concat 连接字符串<br>RTrim 删除右边的空格<br>upper 转为大写<br>left 返回字符串左边的字符<br>length 返回字符串的长度<br>locate 查找子字符串<br>lower 转为小写<br>LTrim 去掉左边的空格<br>Right 返回串右边的字符<br>soundex 返回串的soundex值 将任何文本转为拼音<br>substring 返回子串的字符</p>
<h1 id="时间和日期处理函数"><a href="#时间和日期处理函数" class="headerlink" title="时间和日期处理函数"></a>时间和日期处理函数</h1><p>addDate()  增加一个日期（天，周等）<br>addTime()  增加一个时间（时，分等）<br>CurDate()  返回当前日期<br>CurTime()  返回当前时间<br>Date()  返回日期时间的日期部分<br>DateDiff() 计算两个日期之差<br>Date_Add() 高度灵活的日期运算函数<br>Date_Format() 返回一个格式格的日期或时间串<br>Day() 返回一个日期的天数部分<br>DayOfWeek() 返回星期几<br>Hour() 返回小时<br>Minute() 返回分钟<br>Mouth() 返回月<br>Now() 返回当前日期和时间<br>Second() 返回秒<br>Time() 返回时间部分<br>Year() 返回年</p>
<h1 id="常用的数值处理函数"><a href="#常用的数值处理函数" class="headerlink" title="常用的数值处理函数"></a>常用的数值处理函数</h1><p>abs 绝对数<br>cos 余玄<br>exp 指数<br>mod 余数<br>pi 圆周率<br>rand 随机数<br>sin 正玄<br>sqrt 平方根<br>tan 角度的正切</p>
<h1 id="聚集函数"><a href="#聚集函数" class="headerlink" title="聚集函数"></a>聚集函数</h1><p>avg 平均值<br>count 行数<br>max 最大值<br>min 最小值<br>sum 和</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;字符串函数&quot;&gt;&lt;a href=&quot;#字符串函数&quot; class=&quot;headerlink&quot; title=&quot;字符串函数&quot;&gt;&lt;/a&gt;字符串函数&lt;/h1&gt;&lt;p&gt;concat 连接字符串&lt;br&gt;RTrim 删除右边的空格&lt;br&gt;upper 转为大写&lt;br&gt;left 返回字符串左
    
    </summary>
    
      <category term="mysql" scheme="http://blog.boshu.org/categories/mysql/"/>
    
    
      <category term="笔记" scheme="http://blog.boshu.org/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="mysql" scheme="http://blog.boshu.org/tags/mysql/"/>
    
      <category term="function" scheme="http://blog.boshu.org/tags/function/"/>
    
  </entry>
  
  <entry>
    <title>linux 文件系统权限笔记</title>
    <link href="http://blog.boshu.org/2015/05/2015-05-linux-permissions/"/>
    <id>http://blog.boshu.org/2015/05/2015-05-linux-permissions/</id>
    <published>2015-05-20T16:00:00.000Z</published>
    <updated>2017-03-27T06:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="setuid"><a href="#setuid" class="headerlink" title="setuid"></a>setuid</h1><p>用户还有一个成为setuid(S)的特殊权限，它出现在X位置，setuid权限允许用户以其拥有者的权限来执行文件，即使这个可执行文件是由其它用户运行的<br>setuid是使用不是无限制的，为了安全，它只能应用在Linux ELF格式二进制文件上，而不能用于脚本文件</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +s <span class="built_in">test</span></div></pre></td></tr></table></figure>
<h1 id="粘带位"><a href="#粘带位" class="headerlink" title="粘带位"></a>粘带位</h1><p>粘带位是一种应用于目录的权限类型。通过设置粘滞位，使得只有目录的所有者才能够删除目录中的文件，即使用户组和其它用户有权限也不能删除<br>粘带位出现在其它用户权限中x的位置。<br>如果没有设置执行权限，但设置了粘滞位，那么使用t; 如果同时设置了执行权限和粘滞位，就使用T</p>
<p>数字表示：</p>
<ul>
<li>r=4</li>
<li>w=2</li>
<li>x=1</li>
</ul>
<h1 id="chattr"><a href="#chattr" class="headerlink" title="chattr"></a>chattr</h1><p>修改文件在Linux第二扩展文件系统(E2fs)上的特有属性<br>当修改设置了’A’属性的文件时,它的atime记录不会改变.  这可以在笔记本电脑系统中避免某些磁盘I/O处理.</p>
<ul>
<li>设置了’a’属性的文件只能在添加模式下打开用于写入.  只有超级用户可以设置或清除该属性.</li>
<li>设置了’c’属性的文件在磁盘上由内核自动进行压缩处理.  从该文件读取时返回的是未压缩的数据.  对该文件的一次写入会在保存它们到磁盘之前进行数据压缩.</li>
<li>设置了’d’属性的文件不能对其运行 dump(8) 程序进行备份.</li>
<li>设置了’i’属性的文件不能进行修改:你既不能删除它, 也不能给它重新命名,你不能对该文件创建链接, 而且也不能对该文件写入任何数据.  只有超级用户可以设置或清除该属性.</li>
<li>当删除设置了’s’属性的文件时,将对其数据块清零 并写回到磁盘上.</li>
<li>当修改设置了’S’属性的文件时, 修改会同步写入到磁盘上;这与应用 到文件子系统上的’sync’挂载选项有相同的效果.</li>
<li>当删除设置了’u’属性的文件时, 将会保存其内容.  这使得用户可以请求恢复被删除的文件.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;setuid&quot;&gt;&lt;a href=&quot;#setuid&quot; class=&quot;headerlink&quot; title=&quot;setuid&quot;&gt;&lt;/a&gt;setuid&lt;/h1&gt;&lt;p&gt;用户还有一个成为setuid(S)的特殊权限，它出现在X位置，setuid权限允许用户以其拥有者的权限来执行
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.boshu.org/tags/linux/"/>
    
      <category term="笔记" scheme="http://blog.boshu.org/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Apache ab 中文注释</title>
    <link href="http://blog.boshu.org/2015/05/2008-05-apache-ab/"/>
    <id>http://blog.boshu.org/2015/05/2008-05-apache-ab/</id>
    <published>2015-05-20T16:00:00.000Z</published>
    <updated>2017-03-27T06:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is ApacheBench, Version 2.0.40-dev &lt;$Revision: 1.146 $&gt; apache-2.0<br>Copyright 1996 Adam Twiss, Zeus Technology Ltd, <a href="http://www.zeustech.net/" target="_blank" rel="external">http://www.zeustech.net/</a><br>Copyright 1997-2005 The Apache Software Foundation, <a href="http://www.apache.org/" target="_blank" rel="external">http://www.apache.org/</a></p>
<p>Benchmarking www.google.com (be patient)…..done</p>
<p>Server Software:        GWS/2.1<br>Server Hostname:        www.google.com<br>Server Port:            80</p>
<p>Document Path:          /<br>Document Length:        230 bytes</p>
<p>Concurrency Level:      10<br>/<em>整个测试持续的时间</em>/<br>Time taken for tests:   3.234651 seconds<br>/<em>完成的请求数量</em>/<br>Complete requests:      10<br>/<em>失败的请求数量</em>/<br>Failed requests:        0<br>Write errors:           0<br>Non-2xx responses:      10<br>Keep-Alive requests:    10<br>/<em>整个场景中的网络传输量</em>/<br>Total transferred:      6020 bytes<br>/<em>整个场景中的HTML内容传输量</em>/<br>HTML transferred:       2300 bytes<br>/<em>大家最关心的指标之一，相当于 LR 中的 每秒事务数 ，后面括号中的 mean 表示这是一个平均值</em>/<br>Requests per second:    3.09 [#/sec] (mean)<br>/<em>大家最关心的指标之二，相当于 LR 中的 平均事务响应时间 ，后面括号中的 mean 表示这是一个平均值</em>/<br>Time per request:       3234.651 [ms] (mean)<br>/<em>这个还不知道是什么意思，有知道的朋友请留言，谢谢 ^_^ </em>/<br>Time per request:       323.465 [ms] (mean, across all concurrent requests)<br>/<em>平均每秒网络上的流量，可以帮助排除是否存在网络流量过大导致响应时间延长的问题</em>/<br>Transfer rate:          1.55 [Kbytes/sec] received<br>/<em>网络上消耗的时间的分解，各项数据的具体算法还不是很清楚</em>/<br>Connection Times (ms)<br>              min  mean[+/-sd] median   max<br>Connect:       20  318 926.1     30    2954<br>Processing:    40 2160 1462.0   3034    3154<br>Waiting:       40 2160 1462.0   3034    3154<br>Total:         60 2479 1276.4   3064    3184</p>
<p>/<em>下面的内容为整个场景中所有请求的响应情况。在场景中每个请求都有一个响应时间，其中 50％ 的用户响应时间小于 3064 毫秒，60 ％ 的用户响应时间小于 3094 毫秒，最大的响应时间小于 3184 毫秒</em>/<br>Percentage of the requests served within a certain time (ms)<br>  50%   3064<br>  66%   3094<br>  75%   3124<br>  80%   3154<br>  90%   3184<br>  95%   3184<br>  98%   3184<br>  99%   3184<br>100%   3184 (longest request)</p>
<p>-n requests     Number of requests to perform<br>//在测试会话中所执行的请求个数。默认时，仅执行一个请求<br>-c concurrency Number of multiple requests to make<br>//一次产生的请求个数。默认是一次一个。<br>-t timelimit    Seconds to max. wait for responses<br>//测试所进行的最大秒数。其内部隐含值是-n 50000。它可以使对服务器的测试限制在一个固定的总时间以内。默认时，没有时间限制。<br>-p postfile     File containing data to POST<br>//包含了需要POST的数据的文件.<br>-T content-type Content-type header for POSTing<br>//POST数据所使用的Content-type头信息。<br>-v verbosity    How much troubleshooting info to print<br>//设置显示信息的详细程度 - 4或更大值会显示头信息， 3或更大值可以显示响应代码(404, 200等), 2或更大值可以显示警告和其他信息。 -V 显示版本号并退出。<br>-w              Print out results in HTML tables<br>//以HTML表的格式输出结果。默认时，它是白色背景的两列宽度的一张表。<br>-i              Use HEAD instead of GET<br>// 执行HEAD请求，而不是GET。<br>-C attribute    Add cookie, eg. ‘Apache=1234. (repeatable)<br>//-C cookie-name=value 对请求附加一个Cookie:行。 其典型形式是name=value的一个参数对。此参数可以重复。<br>-P attribute    Add Basic Proxy Authentication, the attributes<br>                are a colon separated username and password.<br>//-P proxy-auth-username:password 对一个中转代理提供BASIC认证信任。用户名和密码由一个:隔开，并以base64编码形式发送。无论服务器是否需要(即, 是否发送了401认证需求代码)，此字符串都会被发送。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This is ApacheBench, Version 2.0.40-dev &amp;lt;$Revision: 1.146 $&amp;gt; apache-2.0&lt;br&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, &lt;a href=
    
    </summary>
    
    
      <category term="apache" scheme="http://blog.boshu.org/tags/apache/"/>
    
      <category term="ab" scheme="http://blog.boshu.org/tags/ab/"/>
    
  </entry>
  
  <entry>
    <title>设备UUID</title>
    <link href="http://blog.boshu.org/2015/04/2008-04-UUID/"/>
    <id>http://blog.boshu.org/2015/04/2008-04-UUID/</id>
    <published>2015-04-09T16:00:00.000Z</published>
    <updated>2017-03-27T06:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UUID是什么"><a href="#UUID是什么" class="headerlink" title="UUID是什么?"></a>UUID是什么?</h1><p>UUID(Universally Unique Identifier)全局唯一标识符,是指在一台机器上生成的数字，它保证对在同一时空中的所有机器都是唯一的。按照开放软件基金会(OSF)制定的标准计算，用到了以太网卡地址、纳秒级时间、芯片ID码和许多可能的数字。由以下几部分的组合：当前日期和时间(UUID的第一个部分与时间有关，如果你在生成一个UUID之后，过几秒又生成一个UUID，则第一个部分不同，其余相同)，时钟序列，全局唯一的IEEE机器识别号（如果有网卡，从网卡获得，没有网卡以其他方式获得），UUID的唯一缺陷在于生成的结果串会比较长。</p>
<h1 id="获取设备的UUID"><a href="#获取设备的UUID" class="headerlink" title="获取设备的UUID"></a>获取设备的UUID</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo blkid /dev/sda1</div><div class="line"></div><div class="line">output: </div><div class="line">/dev/sda1: UUID=<span class="string">"7db6e2b8-6821-476e-8dc5-00ab84bd636e"</span> TYPE=<span class="string">"ext2"</span></div></pre></td></tr></table></figure>
<p>RFC文档 <a href="http://www.ietf.org/rfc/rfc4122.txt" target="_blank" rel="external">http://www.ietf.org/rfc/rfc4122.txt</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;UUID是什么&quot;&gt;&lt;a href=&quot;#UUID是什么&quot; class=&quot;headerlink&quot; title=&quot;UUID是什么?&quot;&gt;&lt;/a&gt;UUID是什么?&lt;/h1&gt;&lt;p&gt;UUID(Universally Unique Identifier)全局唯一标识符,是指在一台
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.boshu.org/tags/linux/"/>
    
      <category term="UUID" scheme="http://blog.boshu.org/tags/UUID/"/>
    
  </entry>
  
  <entry>
    <title>Linux的一些命令</title>
    <link href="http://blog.boshu.org/2015/04/2008-04-linux-cli/"/>
    <id>http://blog.boshu.org/2015/04/2008-04-linux-cli/</id>
    <published>2015-04-07T16:00:00.000Z</published>
    <updated>2017-03-27T06:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>locale 查看本地的语言环境<br>/ect/default/locale 本地语言配置文件</p>
<p>nano 一个文本编辑器<br>blkid 列出设备的UUID</p>
<p>apt-get update 更新软件包列表<br>apt-get upgrede 升级软件包<br>apt-get dist-update 如果运行apt-get upgrede后有些软件提示被保留，而不升级，这条可用来升级所有可用软件包<br>do-release-upgrade 版本升级</p>
<p>apt-cache 搜索某个软件包的名子，或显示软件包的信息<br>apt-cache show 显示软件包的信息</p>
<p>aptitude 高级包管理</p>
<p>tasksel 完成安装任务 定义到/usr/share/tasksel/ .desc 中，有图形界面</p>
<p>dpkg 比较底层的安装命令，以后都是调用这个</p>
<ul>
<li>dpkg -l <package> 查看某个包是否被安装</package></li>
<li>dpkg -L <package> 查看软件包中包含哪些文件</package></li>
<li>dpkg -S /pack/to/file 查看系统中某些文件是由哪个包提供的</li>
<li>dpkg -C 查看哪些包末安装完成</li>
</ul>
<p>sudo su 进入root用户</p>
<p>/etc/network/interfaces 网络配置<br>/etc/resolv.conf NDS配置</p>
<p>mc 文件管理器<br>mcedit mc带的一个文本编辑器</p>
<p>find 查找文件<br>locate 查找文件，在/etc/cron.daily/mlocate中查找，这个文件每天更新一次<br>updatedb 更新/etc/cron.daily/mlocate文件</p>
<p>/etc/ssh/sshd_config ssh配制</p>
<p>jobs 列出后台的任条<br>fg   将后台程序转入到前台<br>bg   将前台程序转入到后台 </p>
<p>/etc/profile 环境变量文件</p>
<p>whereis 检查程序安装路径</p>
<p>/proc/cpuinfo cpu信息</p>
<p>getconf PAGESIZE 查看系统的页大小</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;locale 查看本地的语言环境&lt;br&gt;/ect/default/locale 本地语言配置文件&lt;/p&gt;
&lt;p&gt;nano 一个文本编辑器&lt;br&gt;blkid 列出设备的UUID&lt;/p&gt;
&lt;p&gt;apt-get update 更新软件包列表&lt;br&gt;apt-get upgrede 
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.boshu.org/tags/linux/"/>
    
      <category term="笔记" scheme="http://blog.boshu.org/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>linux-funny-cli</title>
    <link href="http://blog.boshu.org/2014/10/2014-10-linux-funny-cli/"/>
    <id>http://blog.boshu.org/2014/10/2014-10-linux-funny-cli/</id>
    <published>2014-10-31T15:42:43.000Z</published>
    <updated>2017-03-27T06:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>跑火车的sl/LS<br>终端数字雨cmatrix<br>可能是名言警句也可能是逗你玩的笑话的fortune/fortune-zh<br>Linux下的ascii art演示bb<br>互动式小说游戏 adventure<br>cowsay、cowthink、banner、ddate、worms、pig</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;跑火车的sl/LS&lt;br&gt;终端数字雨cmatrix&lt;br&gt;可能是名言警句也可能是逗你玩的笑话的fortune/fortune-zh&lt;br&gt;Linux下的ascii art演示bb&lt;br&gt;互动式小说游戏 adventure&lt;br&gt;cowsay、cowthink、banner、
    
    </summary>
    
    
      <category term="linux" scheme="http://blog.boshu.org/tags/linux/"/>
    
      <category term="cli" scheme="http://blog.boshu.org/tags/cli/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu源码编译安装php常见错误解决办法</title>
    <link href="http://blog.boshu.org/2014/09/2014-09-ubuntu-make-php-error/"/>
    <id>http://blog.boshu.org/2014/09/2014-09-ubuntu-make-php-error/</id>
    <published>2014-09-01T15:26:29.000Z</published>
    <updated>2017-03-27T06:33:02.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">./configure –prefix=/usr/<span class="built_in">local</span>/php –with-config-file-path=/etc \</div><div class="line">–with-mysql=/usr/<span class="built_in">local</span>/mysql –with-mysqli=/usr/<span class="built_in">local</span>/mysql/bin/mysql_config \</div><div class="line">–with-iconv-dir=/usr/<span class="built_in">local</span> –with-freetype-dir –with-jpeg-dir</div><div class="line">–with-png-dir –with-zlib –with-libxml-dir=/usr –<span class="built_in">enable</span>-xml \</div><div class="line">–<span class="built_in">disable</span>-rpath –<span class="built_in">enable</span>-safe-mode –<span class="built_in">enable</span>-bcmath –<span class="built_in">enable</span>-shmop \</div><div class="line">–<span class="built_in">enable</span>-sysvsem –<span class="built_in">enable</span>-inline-optimization –with-curl \</div><div class="line">–with-curlwrappers –<span class="built_in">enable</span>-mbregex –<span class="built_in">enable</span>-fpm –<span class="built_in">enable</span>-mbstring \</div><div class="line">–with-mcrypt –with-gd –<span class="built_in">enable</span>-gd-native-ttf –with-openssl \</div><div class="line">–with-mhash –<span class="built_in">enable</span>-pcntl –<span class="built_in">enable</span>-sockets –with-xmlrpc \</div><div class="line">–<span class="built_in">enable</span>-zip  –<span class="built_in">enable</span>-soap</div></pre></td></tr></table></figure>
<p>出现得错误如下：<br>错误一：<br>configure: error: xml2-config not found. Please check your libxml2 installation.<br>而我已经安装过了libxml2,但是还是有这个提示：<br>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libxml2-dev</div></pre></td></tr></table></figure></p>
<p>错误二：<br>configure: error: Please reinstall the BZip2 distribution<br>而我也已经安装了bzip2，网上找到得解决方案都是需要安装bzip2-dev，可是11.10里面没有这个库。<br>解决办法：在网上找到bzip2-1.0.5.tar.gz，解压，直接make ,sudo make install.(我使用的该源来自于<a href="http://ishare.iask.sina.com.cn/f/9769001.html" target="_blank" rel="external">http://ishare.iask.sina.com.cn/f/9769001.html</a>)</p>
<p>错误三：<br>configure: error: Please reinstall the libcurl distribution -easy.h should be in /include/curl/<br>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libcurl4-gnutls-dev</div></pre></td></tr></table></figure></p>
<p>错误四：<br>configure: error: jpeglib.h not found.<br>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libjpeg-dev</div></pre></td></tr></table></figure></p>
<p>错误五：<br>configure: error: png.h not found.<br>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libpng-dev</div></pre></td></tr></table></figure></p>
<p>错误六：<br>configure: error: libXpm.(a|so) not found.<br>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libxpm-dev</div></pre></td></tr></table></figure></p>
<p>错误七：<br>configure: error: freetype.h not found.<br>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libfreetype6-dev</div></pre></td></tr></table></figure></p>
<p>错误八：<br>configure: error: Your t1lib distribution is not installed correctly. Please reinstall it.<br>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libt1-dev</div></pre></td></tr></table></figure></p>
<p>错误九：<br>configure: error: mcrypt.h not found. Please reinstall libmcrypt.<br>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libmcrypt-dev</div></pre></td></tr></table></figure></p>
<p>错误十：<br>configure: error: Cannot find MySQL header files under yes.<br>Note that the MySQL client library is not bundled anymore!<br>解决办法：<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libmysql++-dev</div></pre></td></tr></table></figure></p>
<p>错误十一：<br>configure: error: xslt-config not found. Please reinstall the libxslt &gt;= 1.1.0 distribution<br>解决办法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install libxslt1-dev</div></pre></td></tr></table></figure></p>
<p>可见PHP源码安装之前需要先安装这些依赖，详细可见<a href="http://forum.ubuntu.org.cn/viewtopic.php?f=88&amp;t=231159" target="_blank" rel="external">http://forum.ubuntu.org.cn/viewtopic.php?f=88&amp;t=231159</a><br>如上错误都解决之后，再次./config….没有错误之后，<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make</div><div class="line">sudo make install</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div
    
    </summary>
    
      <category term="PHP" scheme="http://blog.boshu.org/categories/PHP/"/>
    
    
      <category term="linux" scheme="http://blog.boshu.org/tags/linux/"/>
    
      <category term="ubuntu" scheme="http://blog.boshu.org/tags/ubuntu/"/>
    
      <category term="php" scheme="http://blog.boshu.org/tags/php/"/>
    
  </entry>
  
</feed>
